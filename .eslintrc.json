{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nrwl/nx"],
  "parserOptions": {
    "project": ["tsconfig.base.json"],
    "sourceType": "module"
  },
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript"
  ],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true // always try to resolve types under <root>@types directory even it doesn't contain any source code, like @types/unist
      },
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              // {
              //   "sourceTag": "*",
              //   "onlyDependOnLibsWithTags": ["*"]
              // }
              {
                "sourceTag": "scope:shared",
                "onlyDependOnLibsWithTags": ["scope:shared"]
              },
              {
                "sourceTag": "scope:ui",
                "onlyDependOnLibsWithTags": ["scope:shared", "scope:ui"]
              },
              {
                "sourceTag": "scope:api",
                "onlyDependOnLibsWithTags": ["scope:shared", "scope:api"]
              }
            ]
          }
        ],
        "prettier/prettier": [
          "error",
          {
            "arrowParens": "avoid",
            "singleQuote": true,
            "spaceBeforeFunctionParen": false
          }
        ],
        "no-cond-assign": "error",
        "no-constant-condition": "error",
        "indent": "off",
        "linebreak-style": ["error", "unix"],
        "semi": ["error", "always"],
        "max-len": [
          "warn",
          {
            "code": 140,
            "tabWidth": 2,
            "ignoreTrailingComments": true,
            "ignoreUrls": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreRegExpLiterals": true
          }
        ],
        "no-dupe-args": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-empty": "error",
        "no-ex-assign": "error",
        "no-extra-boolean-cast": "error",
        "no-extra-semi": "error",
        "no-func-assign": "error",
        "no-inner-declarations": "error",
        "no-invalid-regexp": "error",
        "no-irregular-whitespace": "error",
        "no-negated-in-lhs": "error",
        "no-obj-calls": "error",
        "no-regex-spaces": "error",

        "no-sparse-arrays": "error",
        "no-unexpected-multiline": "error",
        "no-unreachable": "error",
        "use-isnan": "error",
        "valid-typeof": "error",
        "array-callback-return": "error",
        "block-scoped-var": "error",
        "complexity": "error",
        "consistent-return": "error",
        "curly": "error",
        "default-case": "off",
        "dot-notation": ["error", { "allowPattern": "^[A-Z]+(_[A-Z]+)+$" }],
        "eqeqeq": "warn",
        "guard-for-in": "error",
        "no-alert": "warn",
        "no-caller": "error",
        "no-case-declarations": "off", // TODO: Consider to make it warn
        "no-else-return": "error",
        "no-empty-pattern": "error",
        "no-eq-null": "error",
        "no-fallthrough": "error",
        "no-implicit-globals": "error",
        "no-invalid-this": "error",
        "no-lone-blocks": "error",
        "no-loop-func": "error",
        "no-multi-spaces": "error",
        "no-multi-str": "error",
        "no-new-wrappers": "error",
        "no-param-reassign": "error",
        "no-redeclare": "error",
        "no-return-assign": "error",
        "no-sequences": "error",
        "no-unmodified-loop-condition": "error",
        "no-unused-expressions": "error",
        "no-useless-call": "error",
        "no-useless-concat": "error",
        "vars-on-top": "error",
        "yoda": "error",
        "no-catch-shadow": "error",
        "no-delete-var": "error",
        "no-shadow": "off",
        "no-use-before-define": "off",
        "array-bracket-spacing": "error",
        "block-spacing": "error",
        "brace-style": "error",
        // camelcase: "error",
        "comma-spacing": "error",
        "comma-style": ["error", "last"],
        "computed-property-spacing": "error",
        "eol-last": "error",
        "func-style": [
          "error",
          "expression",
          {
            "allowArrowFunctions": true
          }
        ],

        "key-spacing": "error",
        "keyword-spacing": "error",
        "lines-between-class-members": ["error", "always"],
        "no-array-constructor": "error",
        "no-lonely-if": "error",
        "no-mixed-spaces-and-tabs": "error",
        "no-multiple-empty-lines": [
          "error",
          {
            "max": 1
          }
        ],
        "no-negated-condition": "off",
        "no-new-object": "error",
        "no-whitespace-before-property": "error",
        "no-spaced-func": "error",
        "no-ternary": "off",
        "no-trailing-spaces": "error",
        "object-curly-spacing": ["error", "always"],
        "one-var": ["error", "never"],
        "one-var-declaration-per-line": "error",
        "padded-blocks": ["error", "never"],
        "quote-props": ["error", "as-needed"],
        "semi-spacing": "error",
        "space-before-blocks": "error",
        "space-before-function-paren": [
          "error",
          {
            "anonymous": "always",
            "named": "never",
            "asyncArrow": "always"
          }
        ],
        "space-in-parens": ["error", "never"],
        "space-infix-ops": "error",
        "space-unary-ops": [
          "error",
          {
            "words": true,
            "nonwords": false
          }
        ],
        "arrow-body-style": ["error", "as-needed"],
        "arrow-parens": ["error", "as-needed"],
        "arrow-spacing": "error",
        "constructor-super": "error",
        "no-class-assign": "error",
        "no-confusing-arrow": "off",
        "no-dupe-class-members": "error",
        "no-var": "error",
        "object-shorthand": "error",
        "prefer-const": "error",
        "prefer-template": "error",
        "template-curly-spacing": "error",
        "no-console": [
          "error",
          {
            "allow": ["warn", "error", "info"]
          }
        ],
        "comma-dangle": ["error", "only-multiline"],
        "no-unused-vars": "off",
        "function-call-argument-newline": ["error", "consistent"],
        "object-curly-newline": "off",
        "object-property-newline": [
          "error",
          {
            "allowAllPropertiesOnSameLine": true
          }
        ],
        "import/named": "off",
        "import/default": "off",
        "import/no-default-export": "warn",
        "import/export": "error",
        "import/exports-last": "off",
        "import/first": "error",
        "import/no-duplicates": "error",
        "import/no-self-import": "error",
        "import/no-unresolved": "off",
        "import/no-useless-path-segments": "error",
        "import/no-cycle": "off",
        "import/newline-after-import": "error",
        "import/no-commonjs": "error",
        "import/no-named-as-default": "off",
        "import/no-unused-modules": "error",
        "import/no-deprecated": "off",
        "import/namespace": "off",
        "import/no-extraneous-dependencies": "off",
        "import/no-mutable-exports": "error",
        "import/order": [
          "error",
          {
            "newlines-between": "always",
            "alphabetize": {
              "order": "asc",
              "caseInsensitive": true
            },
            "pathGroups": [
              {
                "pattern": "@estore/**",
                "group": "parent",
                "position": "before"
              }
            ]
          }
        ],
        "@typescript-eslint/no-namespace": [
          "error",
          { "allowDeclarations": true }
        ],
        "@typescript-eslint/unified-signatures": "error",
        "@typescript-eslint/unbound-method": "off",
        "@typescript-eslint/no-use-before-define": ["error"],
        "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/triple-slash-reference": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/typedef": "off",
        "@typescript-eslint/no-unused-vars": [
          "warn",
          {
            "vars": "all",
            "args": "none",
            "ignoreRestSiblings": false
          }
        ],
        "@typescript-eslint/restrict-plus-operands": "off",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": false
          }
        ],
        "@typescript-eslint/no-non-null-asserted-optional-chain": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-throw-literal": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-unnecessary-qualifier": "error",
        "@typescript-eslint/no-unnecessary-type-arguments": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-includes": "error",
        "@typescript-eslint/promise-function-async": "error",
        "@typescript-eslint/prefer-ts-expect-error": "error",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        "@typescript-eslint/prefer-reduce-type-parameter": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/no-invalid-void-type": "error",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-extra-non-null-assertion": "error",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-dynamic-delete": "error",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "interface",
            "format": ["PascalCase"],
            "custom": {
              "regex": "^I[A-Z]",
              "match": true
            }
          }
        ],
        "@typescript-eslint/explicit-member-accessibility": "off",
        "@typescript-eslint/class-literal-property-style": "error",
        "@typescript-eslint/no-empty-function": "off"
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nrwl/nx/typescript"],
      "rules": {}
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nrwl/nx/javascript"],
      "rules": {}
    },
    {
      "files": ["*.spec.ts", "*.spec.tsx", "*.spec.js", "*.spec.jsx"],
      "env": {
        "jest": true
      },
      "rules": {}
    },
    {
      "files": "*.json",
      "parser": "jsonc-eslint-parser",
      "rules": {}
    }
  ]
}
